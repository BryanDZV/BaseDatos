--EJERCICIO1
/
CREATE OR REPLACE TRIGGER TRG_ACTUALIZAR_MULTA
AFTER UPDATE ON PRESTAMO
FOR EACH ROW
DECLARE
VAUXSALDO_MULTA USUARIO.SALDO_MULTA%TYPE;
VAUXPRIMERA USUARIO.SALDO_MULTA%TYPE;
VAUXSEGUNDA USUARIO.SALDO_MULTA%TYPE;
VAUXTERCERA USUARIO.SALDO_MULTA%TYPE;
VAUXDIFERENCIA PRESTAMO.FECHA_DEVOLUCION%TYPE;

BEGIN
--BUSCAR SALDO_MULTA
SELECT SALDO_MULTA INTO VAUXSALDO_MULTA
FROM USUARIO
WHERE ID_USUARIO=:NEW.ID_USUARIO;

VAUXPRIMERA:=VAUXSALDO_MULTA+2;
VAUXSEGUNDA:=VAUXSALDO_MULTA+5;
VAUXTERCERA:=VAUXSALDO_MULTA+10;
VAUXDIFERENCIA:=:NEW.FECHA_PRESTAMO-:NEW.FECHA_DEVOLUCION;

IF VAUXDIFERENCIA<6 THEN
UPDATE USUARIO
SET SALDO_MULTA=VAUXPRIMERA
WHERE ID_USUARIO=:NEW.ID_USUARIO;
ELSIF VAUXDIFERENCIA>5 AND VAUXDIFERENCIA <16 THEN
UPDATE USUARIO
SET SALDO_MULTA=VAUXSEGUNDA
WHERE ID_USUARIO=:NEW.ID_USUARIO;
ELSIF VAUXDIFERENCIA >15 THEN
UPDATE USUARIO
SET SALDO_MULTA=VAUXTERCERA
WHERE ID_USUARIO=:NEW.ID_USUARIO;
END IF;

EXCEPTION 
WHEN NO_DATA_FOUND THEN
RAISE_APPLICATION_ERROR(-2003,'NO EXSITE SALDO_MULT');
END;
/


--
CREATE OR REPLACE TRIGGER TRG_BLOQUER_USUARIO
AFTER UPDATE ON PRESTAMO
FOR EACH ROW
DECLARE
TYPE REG_ID_USUARIO IS RECORD(
ID_USUARIO USUARIO.ID_USUARIO%TYPE);
CURSOR CVER IS
SELECT ID_USUARIO 
FROM USUARIO
WHERE SALDO_MULTA>20;
VAUXID_USUARIO REG_ID_USUARIO;
BEGIN
--BUSCAR ID CON SALDO_MULTA MAYOR A 20
OPEN CVER;
FETCH CVER INTO VAUXID_USUARIO;
WHILE CVER%FOUND LOOP
--BLOQUER AUTOMATICAMENTE
IF VAUXID_USUARIO%FOUND THEN
INSERT INTO USUARIOS_BLOQUEADOS
VALUES(VAUXID_USUARIO,'RETRASO',:NEW.FECHA_DEVOLUCION);
END IF;
FETCH CVER INTO VAUXID_USUARIO;
END LOOP;
CLOSE CVER;
END;
/

---








