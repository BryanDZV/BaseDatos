/*1. Crea un paquete PAQ_USUARIOS que contenga un procedimiento 
que reciba un ID de usuario y muestre su nombre y multa actual.*/
/*2. En el mismo paquete, crea una funci√≥n que devuelva el n√∫mero total de usuarios 
con multa superior a 0.*/
CREATE OR REPLACE PACKAGE PAQ_USUARIOS IS
PROCEDURE MOSTRAR_USUARIO(PID_USUARIO IN USUARIO.ID_USUARIO%TYPE);
FUNCTION TOTAL_MULTADOS RETURN NUMBER;
END;
/

CREATE OR REPLACE PACKAGE BODY PAQ_USUARIOS IS
PROCEDURE MOSTRAR_USUARIO(PID_USUARIO IN USUARIO.ID_USUARIO%TYPE)
IS
VNOMBRE USUARIO.NOMBRE%TYPE;
VSALDO_MULTA USUARIO.SALDO_MULTA%TYPE;
BEGIN
SELECT NOMBRE,SALDO_MULTA 
INTO VNOMBRE,VSALDO_MULTA
FROM USUARIO
WHERE ID_USUARIO=PID_USUARIO;

dbms_output.PUT_LINE('NOMBRE:  '||VNOMBRE||'  MULTA:  '||VSALDO_MULTA);
EXCEPTION 
WHEN OTHERS THEN
    -- Captura cualquier otro error no previsto
    DBMS_OUTPUT.PUT_LINE('Se produjo un error inesperado.');
    DBMS_OUTPUT.PUT_LINE('C√≥digo Oracle: ' || SQLCODE);
    DBMS_OUTPUT.PUT_LINE('Mensaje Oracle: ' || SQLERRM);
END MOSTRAR_USUARIO;

FUNCTION TOTAL_MULTADOS 
RETURN NUMBER
IS
VAUX_RESULTADO NUMBER;
BEGIN
SELECT COUNT(SALDO_MULTA) AS MULTADOS 
INTO VAUX_RESULTADO
FROM USUARIO
WHERE SALDO_MULTA>0;
RETURN VAUX_RESULTADO;
END TOTAL_MULTADOS;

END PAQ_USUARIOS;
/
/*3. Crea un procedimiento que reciba un ISBN y devuelva el t√≠tulo, autor y g√©nero usando
par√°metros OUT.*/
//SACAR TABLAS DESDE OUT TE EXIGE CREARTE ANTES EL TYPE Y TABLA Y LOS YPE NECSITAN ESTAR DENTRO DE PL/SQL O PAQUETES


/
CREATE OR REPLACE PROCEDURE INFO_LIBRO(PISBN IN LIBRO.ISBN%TYPE, 
PTITULO OUT LIBRO.TITULO%TYPE,
PAUTOR OUT LIBRO.AUTOR%TYPE,
PGENERO OUT LIBRO.GENERO%TYPE)
IS
BEGIN
SELECT TITULO,AUTOR,GENERO 
INTO PTITULO,PAUTOR,PGENERO
FROM LIBRO
WHERE ISBN=PISBN;
END INFO_LIBRO;
/

DECLARE
VTITULO LIBRO.TITULO%TYPE;
VAUTOR LIBRO.AUTOR%TYPE;
VGENERO LIBRO.GENERO%TYPE;
BEGIN
INFO_LIBRO('9781234567890',VTITULO,VAUTOR,VGENERO);
DBMS_OUTPUT.PUT_LINE(VTITULO);
DBMS_OUTPUT.PUT_LINE(VGENERO);
DBMS_OUTPUT.PUT_LINE(VAUTOR);
END;

/*4. Crea un procedimiento con un par·metro IN OUT que aumente una cantidad al saldo_multa y devuelva el nuevo saldo.*/
/
CREATE OR REPLACE PROCEDURE AUMENTO_SALDO (PID_USUARIO IN USUARIO.ID_USUARIO%TYPE,PAUMENTO IN OUT USUARIO.SALDO_MULTA%TYPE)
IS
VSALDO_ACTUAL USUARIO.SALDO_MULTA%TYPE;
BEGIN
SELECT SALDO_MULTA INTO VSALDO_ACTUAL
FROM USUARIO
WHERE ID_USUARIO=PID_USUARIO;

VSALDO_ACTUAL=VSALDO_ACTUAL+PAUMENTO;
UPDATE USUARIO
SET SALDO_MULTA=VSALDO_ACTUAL
WHERE ID_USUARIO=PID_USUARIO;

PAUMENTO=VSALDO_ACTUAL;
EXCEPTION
WHEN NO_DATA_FOUN THEN
RAISE_APPLICATION_ERROR(-20000,'NO SE HA ENCONTRADO DATO');

END AUMENTO_SALDO;

/





/
DECLARE
VAUX_RESULTADO NUMBER;
BEGIN
VAUX_RESULTADO:=PAQ_USUARIOS.TOTAL_MULTADOS;
DBMS_OUTPUT.PUT_LINE('RETURN TOTAL_MULTADOS:  '||VAUX_RESULTADO);
PAQ_USUARIOS.MOSTRAR_USUARIO(1);

END;
/

